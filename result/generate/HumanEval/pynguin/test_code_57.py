# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import code_57 as module_0


def test_case_0():
    bytes_0 = b"\xa8\x0c\xab\xd2\xa6\xf08"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.monotonic(list_0)
    assert var_0 is True


def test_case_1():
    bytes_0 = b"\x1c\xd9\xee"
    var_0 = module_0.monotonic(bytes_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.monotonic(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"hg\xa1\xda\x19\xfd\x98\xf4O\x08"
    int_0 = 650
    set_0 = {int_0}
    bool_0 = True
    list_0 = [bool_0]
    var_0 = module_0.monotonic(list_0)
    assert var_0 is True
    var_1 = module_0.monotonic(set_0)
    assert var_1 is False
    var_2 = module_0.monotonic(bytes_0)
    assert var_2 is False
    var_3 = module_0.monotonic(bytes_0)
    assert var_3 is False
    bool_1 = False
    list_1 = [var_0, bool_1, var_1, bool_1, bool_1]
    var_4 = module_0.monotonic(list_1)
    assert var_4 is True
    var_5 = module_0.monotonic(list_1)
    assert var_5 is True
    module_0.monotonic(bool_1)
