# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import code_71 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    tuple_0 = ()
    var_0 = module_0.triangle_area(tuple_0, tuple_0, tuple_0)
    assert var_0 == -1
    module_0.triangle_area(tuple_0, var_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"r(\xd2\x1a3!\x10w\x85Le\xa3N\xad\xce\x98"
    module_0.triangle_area(bytes_0, bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "J')i\ru7_zT-CIG_Tw."
    bool_0 = True
    module_0.triangle_area(str_0, str_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -4289
    var_0 = module_0.triangle_area(int_0, int_0, int_0)
    assert var_0 == -1
    int_1 = 822
    var_1 = module_0.triangle_area(int_0, int_1, int_0)
    assert var_1 == -1
    var_2 = module_0.triangle_area(int_1, var_0, var_1)
    assert var_2 == -1
    var_3 = module_0.triangle_area(int_0, int_0, int_0)
    assert var_3 == -1
    none_type_0 = None
    module_0.triangle_area(none_type_0, none_type_0, none_type_0)
