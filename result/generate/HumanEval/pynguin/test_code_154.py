# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import code_154 as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\x00\xcc\x99\xea\xc2\xe5\xafV\xaa"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.cycpattern_check(list_0, list_0)
    assert var_0 is True


def test_case_1():
    bytes_0 = b"\xd5v\n\x15\x15\xd3"
    var_0 = module_0.cycpattern_check(bytes_0, bytes_0)
    assert var_0 is True
    str_0 = "d~PfM<f-!o^v>"
    var_1 = module_0.cycpattern_check(bytes_0, str_0)
    var_2 = module_0.cycpattern_check(bytes_0, bytes_0)
    assert var_2 is True


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.cycpattern_check(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "0[E\x0cgtpn06r-kiLE"
    var_0 = module_0.cycpattern_check(str_0, str_0)
    assert var_0 is True
    list_0 = []
    var_1 = module_0.cycpattern_check(str_0, list_0)
    assert var_1 is False
    dict_0 = {}
    var_2 = module_0.cycpattern_check(dict_0, str_0)
    assert var_2 is False
    object_0 = module_1.object(**dict_0)
    module_0.cycpattern_check(object_0, object_0)
