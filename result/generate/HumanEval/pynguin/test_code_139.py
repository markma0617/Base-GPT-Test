# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import code_139 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.special_factorial(bool_0)
    assert var_0 == 1
    var_1 = module_0.special_factorial(var_0)
    assert var_1 == 1
    var_2 = module_0.special_factorial(bool_0)
    assert var_2 == 1
    var_3 = module_0.special_factorial(var_0)
    assert var_3 == 1
    var_4 = module_0.special_factorial(var_2)
    assert var_4 == 1
    var_5 = module_0.special_factorial(var_2)
    assert var_5 == 1
    var_6 = module_0.special_factorial(bool_0)
    assert var_6 == 1
    var_7 = module_0.special_factorial(var_0)
    assert var_7 == 1
    var_8 = module_0.special_factorial(var_1)
    assert var_8 == 1
    var_9 = module_0.special_factorial(var_5)
    assert var_9 == 1
    var_10 = module_0.special_factorial(var_8)
    assert var_10 == 1
    var_11 = module_0.special_factorial(var_2)
    assert var_11 == 1
    var_12 = module_0.special_factorial(var_9)
    assert var_12 == 1
    none_type_0 = None
    module_0.special_factorial(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    var_0 = module_0.special_factorial(bool_0)
    assert var_0 == 1
    var_1 = module_0.special_factorial(bool_0)
    assert var_1 == 1
    var_2 = module_0.special_factorial(bool_0)
    assert var_2 == 1
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    module_0.special_factorial(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.special_factorial(none_type_0)
